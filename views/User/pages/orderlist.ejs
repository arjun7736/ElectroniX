<%- include('../layout/header') %>
 <%- include('../layout/navbar') %>

<div class="container grid grid-cols-12 items-start gap-6 pt-4 pb-16">
  <%- include('../layout/sidebar') %>
  <div class="col-span-9 grid grid-cols-1 p-4">
    <div class="mb-8">
      <h1 class="text-2xl font-bold text-gray-900">My Orders</h1>
    </div>
    <ul class="list-none p-4 rounded-md shadow-md">
      <%order.forEach((value)=>{ %>
      <a href="/orderdetails/<%=value._id%>"><li
        class="flex col-span-4 mt-5 items-center shadow-lg justify-between p-4 border-b border-gray-200"
      >
        <div class="flex flex-col">
          <p class="font-semibold text-gray-800">
            Order ID: <%=value.orderId %>
          </p>
          <p class="text-gray-500">
            Order Date: <%=value.orderDate.toLocaleDateString() %>
          </p>
        </div>

        <div class="flex items-center">
          <p class="mr-4 font-semibold text-green-500">
            &#8377; <%=value.grandTotal %>
          </p>
          <%if(value.status=='Cancelled' || value.status =='Return'){  %>  
          <p id="orderStatus_<%=value.orderId%>" class="uppercase text-red-500 font-semibold mr-3">
            <%=value.status %>
          </p>
          <% } else if(value.status =='Delivered'){ %>  
            <p id="orderStatus_<%=value.orderId%>" class="uppercase text-green-500 font-semibold mr-3">
                <%=value.status %>
              </p>
            <% } else{%> 
              <p id="orderStatus_<%=value.orderId%>" class="uppercase text-orange-500 font-semibold mr-3">
              <% } %>
          
          <%if(value.status=='Cancelled' || value.status =='Return' ){  %>  
          <a
            id="<%= value.orderId %>"
            onclick="cancelOrder('<%=value.orderId%>')"
            class=" hidden cursor-pointer ml-3 px-4 py-2 rounded-md bg-red-500 text-white"
            >Cancel Order</a
          >
          <% } else if(value.status=='Delivered'){ %>   
            
          <a
          id="<%= value.orderId %>"
          onclick="returnProduct('<%=value.orderId%>')"
          class="inline-block uppercase cursor-pointer ml-3 px-4 py-2 rounded-md bg-red-500 text-white" >Return</a>
            <% } else{%>
              <a
            id="<%= value.orderId %>"
            onclick="cancelOrder('<%=value.orderId%>')"
            class="inline-block  cursor-pointer ml-3 px-4 py-2 rounded-md bg-red-500 text-white"
            >Cancel Order</a
          >

              <%}%>
<%if(value.status=='Delivered'|| value.status==='Return'){%> 
              <a href="/invoice/<%=value.orderId%>" class="inline-block ml-3 px-4 py-2 rounded-md bg-gray-200 hover:bg-gray-300 text-gray-500">Get Invoice</a>
            <%}else{%> 
              <a href="" class=" hidden  px-4 py-2 rounded-md bg-gray-200 hover:bg-gray-300 text-gray-500">Get Invoice</a>
              <% }%>

        </div>
      </li></a>
      <% })%>
    </ul>
    
  <div class="pagination mt-4">
    <% for (let i = 1; i <= totalPages; i++) { %>
        <a href="/orderlist?page=<%= i %>" class="px-3 py-1 mx-1 rounded-md <%= currentPage == i ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700' %>">
            <%= i %>
        </a>
    <% } %>
  </div>
  
  </div>
  
</div>

<%- include('../layout/footer') %>

   <script>
    function cancelOrder(orderid) {
      Swal.fire({
        title: 'Are you sure?',
        text: 'You will not be able to recover this order!',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, cancel it!',
        cancelButtonText: 'No, keep it'
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            title: 'Select a reason for cancellation',
            input: 'select',
            inputOptions: {
                
              'Not needed anymore': 'Not needed anymore',
              'Found a better deal': 'Found a better deal',
              'Changed my mind': 'Changed my mind',
              'Placed By Mistake':'Placed By Mistake',
              'i dont have Money':'i dont have Money',
              'Other': 'Other',
            },
            inputPlaceholder: 'Select a reason',
            showCancelButton: true,
            confirmButtonText: 'Confirm',
            cancelButtonText: 'Cancel'
          }).then((reasonResult) => {
            if (reasonResult.isConfirmed) {
              const cancellationReason = reasonResult.value;
                fetch(`/cancelOrder/${orderid}`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderID: orderid, reason: cancellationReason }),
              })
                .then((response) => response.json())
                .then((data) => {
    if (data.success) {
        Swal.fire({
            title: 'Cancelled!',
            text: 'The order has been cancelled.',
            icon: 'success',
        });
        const statusElement = document.getElementById(`orderStatus_${orderid}`);
        const button = document.getElementById(`${orderid}`);
        statusElement.textContent = 'Cancelled';
        statusElement.classList.remove('text-orange-300');
        statusElement.classList.add('text-red-500');
        button.classList.add('hidden');
    } else {
        Swal.fire({
            title: 'Error',
            text: 'Failed to cancel the order. Please try again.',
            icon: 'error',
        });
    }
})
.catch((error) => {
    console.error('Error:', error);
    Swal.fire({
        title: 'Error',
        text: 'An unexpected error occurred. Please try again.',
        icon: 'error',
    });
});

            }
          });
        } else if (result.dismiss === Swal.DismissReason.cancel) {
          Swal.fire('Cancelled', 'Your order is safe :)', 'info');
        }
      });
    }
  </script>

<script>
  function returnProduct(orderId){
    Swal.fire({
        title: 'Are you sure?',
        text: 'You will not be able to recover this order!',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, return it!',
        cancelButtonText: 'No, keep it'
    }).then((result) => {
      if (result.isConfirmed) {
        Swal.fire({
          title: 'Return Reason',
          input: 'text',
          inputLabel: 'Please provide a reason for the return',
          inputPlaceholder: 'Enter your reason here...',
          showCancelButton: true,
          confirmButtonText: 'Submit',
          cancelButtonText: 'Cancel',
          inputValidator: (value) => {
            if (!value) {
              return 'You need to provide a reason!';
            }
          }
        }).then((reasonResult) => {
          if (reasonResult.isConfirmed) {
            const returnReason = reasonResult.value;
            fetch(`/returnOrder/${orderId}`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ reason: returnReason }),
            })
            .then(response => {
              if (response.ok) {
                // Show success toast
                
                showToast('Product returned successfully','success');
              } else {
                // Show error toast
                showToast('Failed to return product !','error');
              }
            })
            .catch(error => {
              console.error('Error returning product:', error);
              // Show error toast
              showToast('Failed to return product !','error');
            });
          }
        });
      }
    }).catch((err) => {
      console.error('Error in returnProduct:', err);
      // Show error toast
      toastr.error('Failed to initiate return process');
    });
  }
</script>
